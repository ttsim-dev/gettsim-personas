# ======================================================================================
# Project metadata
# ======================================================================================

[project]
name = "gettsim_personas"
description = "Personas to use as example inputs for GETTSIM."
requires-python = ">=3.11"
dependencies = ["ttsim-backend>=1.0a3"]
dynamic = ["version"]
keywords = [
    "Economics",
    "Taxes",
    "Benefits",
    "Transfers",
    "Pensions",
    "Germany",
    "GETTSIM",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
# About the project
authors = [
    { name = "Hans-Martin von Gaudecker", email = "hmgaudecker@uni-bonn.de" },
    { name = "Marvin Immesberger", email = "immesberger@uni-bonn.de" },
]
maintainers = [
    { name = "Hans-Martin von Gaudecker", email = "hmgaudecker@uni-bonn.de" },
    { name = "Marvin Immesberger", email = "immesberger@uni-bonn.de" },
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "GNU Affero General Public License v3"

[project.urls]
Changelog = "https://github.com/ttsim-dev/gettsim-personas"
Documentation = "https://github.com/ttsim-dev/gettsim-personas"
Github = "https://github.com/ttsim-dev/gettsim-personas"
Tracker = "https://github.com/ttsim-dev/gettsim-personas/issues"

# ======================================================================================
# Build system configuration
# ======================================================================================

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.vcs]
version-file = "src/gettsim_personas/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["tests"]
only-packages = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

# ======================================================================================
# Pixi configuration
# ======================================================================================

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
python = ">=3.11,<3.14"
jupyterlab = "*"
pre-commit = "*"
pygraphviz = "*"
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
numpy = "*"
pandas = ">=2.2"
plotly = ">=6.2"
dags = ">=0.4.1"
networkx = ">=3.5"

[tool.pixi.pypi-dependencies]
gettsim_personas = {path = ".", editable = true}
gettsim = {git = "https://github.com/iza-institute-of-labor-economics/gettsim", rev = "be95562b86cb912ca9f11eec0e9912c65f3d5a24"}
pdbp = "*"

[tool.pixi.target.unix.pypi-dependencies]
kaleido = "*"

[tool.pixi.target.win-64.pypi-dependencies]
kaleido = "==0.1.0.post1"

# Features
# --------------------------------------------------------------------------------------

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"

[tool.pixi.feature.mypy.pypi-dependencies]
mypy = "~=1.16"
types-PyYAML = "*"
types-pytz = "*"


# Tasks
# --------------------------------------------------------------------------------------

[tool.pixi.feature.test.tasks]
tests = "pytest"

[tool.pixi.feature.mypy.tasks]
mypy = "mypy --ignore-missing-imports"

# Environments
# --------------------------------------------------------------------------------------

[tool.pixi.environments]
mypy = ["mypy"]
py311 = ["test", "py311"]
py312 = ["test", "py312"]
py313 = ["test", "py313"]

# ======================================================================================
# Ruff configuration
# ======================================================================================

[tool.ruff]
target-version = "py312"
fix = true

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    "ANN",  # Missing type annotations
    "COM812", # Conflict with ruff-format
    "D10",  # Missing docstrings
    "ISC001", # Conflict with ruff-format
    "PD901", # df is a great name with functional data management
    "PLR0913",  # Too many arguments in function definition
    "RET504", # Don't force to calculate upon return
    "S101",  # Use of `assert` detected.
    "S301",  # pickle module is unsafe
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "PD011"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# ======================================================================================
# Miscellaneous tools configuration
# ======================================================================================


[tool.pytest.ini_options]
addopts = "--pdbcls=pdbp:Pdb"
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]


[tool.yamlfix]
line_length = 88
none_representation = "null"
